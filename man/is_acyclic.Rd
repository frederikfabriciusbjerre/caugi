% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/queries.R
\name{is_acyclic}
\alias{is_acyclic}
\title{Is the \code{caugi} acyclic?}
\usage{
is_acyclic(cg, force_check = FALSE)
}
\arguments{
\item{cg}{A \code{caugi_graph} object.}

\item{force_check}{Logical; if \code{TRUE}, the function will test if the graph is
acyclic, if \code{FALSE} (default), it will look at the graph class.}
}
\value{
A logical value indicating whether the graph is acyclic.
}
\description{
Checks if the given \code{caugi} graph is acyclic.
}
\details{
\strong{Lazy building}

If the graph is not built, the graph will be built before making the query.

\strong{Check logic}

By the construction of the \code{caugi_graph}, if the graph class is "DAG" or
"PDAG", the graph should be guaranteed to be acyclic. If the graph class is
"Unknown", the graph may or may not be acyclic. If \code{force_check = TRUE}, the
function will check if the graph is acyclic using the Rust backend, no matter
the class. If the graph class is not inherently acyclic, \code{is_acyclic} will
run the check.

\strong{Note}

We do not think that it is possible to introduce a cycle in a \code{caugi_graph}
on acyclic classes without the package throwing errors. We might be wrong,
though, so \code{force_check} is e a feature that is there for peace of mind.
}
\seealso{
Other queries: 
\code{\link{ancestors}()},
\code{\link{children}()},
\code{\link{descendants}()},
\code{\link{edge_types}()},
\code{\link{exogenous}()},
\code{\link{is_caugi}()},
\code{\link{is_dag}()},
\code{\link{is_empty_caugi}()},
\code{\link{is_pdag}()},
\code{\link{markov_blanket}()},
\code{\link{neighbors}()},
\code{\link{nodes}()},
\code{\link{parents}()},
\code{\link{same_nodes}()}
}
\concept{queries}
