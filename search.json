[{"path":"https://frederikfabriciusbjerre.github.io/caugi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 caugi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"what-is-caugi","dir":"Articles","previous_headings":"","what":"What is caugi?","title":"Introduction to `caugi`","text":"caugi (pronounced ‚Äúcorgi‚Äù) stands Causal Graph Interface. caugi small R interface fast Rust backend causal graphs. define graphs readable infix operators, query relations, keep R code nice tidy, Rust handles performance.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"the-basic-object-caugi_graph","dir":"Articles","previous_headings":"","what":"The basic object: caugi_graph","title":"Introduction to `caugi`","text":"caugi_graph bread butter caugi. easy create, query, modify. can create simple graphs well large number predefined graph classes. Currently, support \"Unknown\", \"DAG\", \"PDAG\". plan supporting several causal graph types future releases, \"PAG\", \"CPDAG\", \"MAG\", \"SWIG\", \"ADMG\".","code":"# a tiny DAG cg <- caugi_graph(   A %-->% B + C,   B %-->% D,   C %-->% D,   class = \"DAG\", # optional, guarantees acyclicity by construction   simple = TRUE, # default   build = TRUE # build now; otherwise built lazily on first query )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"edge-operators","dir":"Articles","previous_headings":"The basic object: caugi_graph","what":"Edge operators","title":"Introduction to `caugi`","text":"%-->% directed %---% undirected %<->% bidirected %o->% partially directed %o--% partially undirected %o-o% partial can register types register_caugi_edge(), find need expressive set edges. example, want represent directed edge reverse direction, can like : expect feature needing polishing future releases, love input use feature!","code":"register_caugi_edge(   glyph = \"<--\",   tail_mark = \"arrow\",   head_mark = \"tail\",   class = \"directed\",   symmetric = FALSE,   flags = c(\"TRAVERSABLE_WHEN_CONDITIONED\") )  caugi_graph(A %-->% B, B %<--% C, class = \"PDAG\") #> # A tibble: 3 √ó 1 #>   name  #>   <chr> #> 1 A     #> 2 B     #> 3 C     #> # A tibble: 2 √ó 3 #>   from  edge  to    #>   <chr> <chr> <chr> #> 1 A     -->   B     #> 2 B     <--   C  # reset the registry to default with original edges reset_caugi_registry()"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"lazy-building-and-the-rust-backend","dir":"Articles","previous_headings":"The basic object: caugi_graph","what":"(Lazy) building and the Rust backend","title":"Introduction to `caugi`","text":"caugi graphs represented compact Compressed Sparse Row (CSR) format Rust. caugi works front loading philosophy. Since caugi graph stored CSR format, mutations graph computationally expensive compared graph storage systems, allows fast querying. Additionally storage format graph , caugi also stores additional information node relations way allows ùí™(1)\\mathcal{O}(1) look-time many relational queries, nb(cg, ) ch(cg, B). accommodate cost mutations, caugi graphs built lazily. means mutate graph, example adding edges , graph edits stored R, Rust. need query graphs, graph rebuild Rust, query executed newly built graph. can also use build(cg) function force building graph Rust time.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"nodes-grouping-and","dir":"Articles","previous_headings":"The basic object: caugi_graph","what":"Nodes, grouping, and +","title":"Introduction to `caugi`","text":"Use + fan one side, c(...) parentheses group. Unconnected symbols also declare nodes:","code":"caugi_graph(   X %-->% Y + Z, # X ‚Üí Y and X ‚Üí Z   c(Y, Z) %-->% W, # Y ‚Üí W and Z ‚Üí W   (A + B) %---% (C + D) # all undirected pairs across groups ) #> # A tibble: 8 √ó 1 #>   name  #>   <chr> #> 1 X     #> 2 Y     #> 3 Z     #> 4 A     #> 5 B     #> 6 W     #> 7 C     #> 8 D     #> # A tibble: 8 √ó 3 #>   from  edge  to    #>   <chr> <chr> <chr> #> 1 A     ---   C     #> 2 A     ---   D     #> 3 B     ---   C     #> 4 B     ---   D     #> 5 X     -->   Y     #> 6 X     -->   Z     #> 7 Y     -->   W     #> 8 Z     -->   W caugi_graph(A, B, C) # declares three isolated nodes #> # A tibble: 3 √ó 1 #>   name  #>   <chr> #> 1 A     #> 2 B     #> 3 C     #> # A tibble: 0 √ó 3 #> # ‚Ñπ 3 variables: from <chr>, edge <chr>, to <chr>"},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"relations","dir":"Articles","previous_headings":"Queries","what":"Relations","title":"Introduction to `caugi`","text":"can query relations like parents, children, neighbors. can use symbols, characters, indices.","code":"cg <- caugi_graph(   A %-->% B + C,   B %-->% D,   C %-->% D,   E %---% F,   class = \"PDAG\" ) parents(cg, \"D\") #> [1] \"B\" \"C\" children(cg, index = 3) #> [1] \"D\" neighbors(cg, c(\"B\", \"C\")) #> $B #> [1] \"A\" \"D\" #>  #> $C #> [1] \"A\" \"D\""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"properties","dir":"Articles","previous_headings":"Queries","what":"Properties","title":"Introduction to `caugi`","text":"can check graph properties following functions.","code":"is_acyclic(cg) #> [1] TRUE is_dag(cg) #> [1] FALSE is_pdag(cg) #> [1] TRUE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"modifying-graphs","dir":"Articles","previous_headings":"","what":"Modifying graphs","title":"Introduction to `caugi`","text":"can add, remove, set edges nodes. Changes applied next query call build(). provide non-standard evaluation interface infix operators: can use standard evaluation: Besides add_edges, can also use remove_edges(), set_edges(), add_nodes(), remove_nodes(), set_nodes(), subgraph().","code":"cg <- caugi_graph(   A %-->% B + C,   B %-->% D ) cg <- add_edges(cg, E %-->% F) cg <- add_edges(cg,   from = c(\"D\", \"G\"),   edge = c(\"-->\", \"o->\"),   to = c(\"E\", \"H\") )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"s7-and-safety","dir":"Articles","previous_headings":"","what":"S7 and Safety","title":"Introduction to `caugi`","text":"caugi utilizes S7 object system ensure mutation safety. means meant hard mutate graphs without using provided functions. ensure graphs always valid, accidentally create situations queries invalid graph invalid. S7 object system widely used yet, found S3 object system lenient, hard us ensure graphs queries always valid. found S4 heavy cumbersome work .","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"future-work","dir":"Articles","previous_headings":"","what":"Future work","title":"Introduction to `caugi`","text":"plan adding following features caugi future: Graph classes: PAG, CPDAG, MAG, SWIG, ADMG, Adjustment sets, Structural Hamming Distance, Adjustment Identification Distance, d- m-separation queries, ‚Ä¶much !","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/Introduction_to_caugi.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Introduction to `caugi`","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] caugi_0.0.0.9000 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.5       cli_3.6.5         knitr_1.50        rlang_1.1.6       #>  [5] xfun_0.53         generics_0.1.4    textshaping_1.0.4 S7_0.2.0          #>  [9] jsonlite_2.0.0    glue_1.8.0        htmltools_0.5.8.1 ragg_1.5.0        #> [13] sass_0.4.10       rmarkdown_2.30    tibble_3.3.0      evaluate_1.0.5    #> [17] jquerylib_0.1.4   fastmap_1.2.0     yaml_2.3.10       lifecycle_1.0.4   #> [21] compiler_4.5.1    dplyr_1.1.4       fs_1.6.6          pkgconfig_2.0.3   #> [25] htmlwidgets_1.6.4 systemfonts_1.3.1 digest_0.6.37     R6_2.6.1          #> [29] utf8_1.2.6        tidyselect_1.2.1  pillar_1.11.1     magrittr_2.0.4    #> [33] bslib_0.9.0       tools_4.5.1       pkgdown_2.1.3     cachem_1.1.0      #> [37] desc_1.4.3"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/motivation.html","id":"motivation-for-caugi","dir":"Articles","previous_headings":"","what":"Motivation for caugi","title":"Motivation","text":"another graph package R? caugi package designed provide fast, flexible, causality-first graph interface.","code":"library(caugi)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/motivation.html","id":"representation-of-causal-graphs","dir":"Articles","previous_headings":"Motivation for caugi","what":"Representation of causal graphs","title":"Motivation","text":"Causal graphs easy draw aid us understanding causal mechanisms visual representation. R, representing can feel clunky. Historically, users resorted adjacency matrices, edge lists, packages like igraph graph. tools great strengths, built causal graphs, often special edge types properties. leads situations representing undirected edges two directed edges going direction, representing PAG-type edges opaque matrix formats, seen example pcalg, represents graph second form reads like picture head. people working causal inference causal discovery, lack readable, well supported formats can lead clunky, hacky code hard read maintain. caugi aims fix readable syntax, mimics draw graphs hand, gives user ability express complex causal relationships.","code":"nodes <- c(\"A\", \"B\", \"C\", \"D\", \"E\") amat <- matrix(   c(     0L, 2L, 0L, 0L, 1L,     3L, 0L, 2L, 1L, 0L,     0L, 1L, 0L, 0L, 3L,     0L, 1L, 0L, 0L, 3L,     3L, 0L, 3L, 3L, 0L   ),   5, 5,   byrow = TRUE, dimnames = list(nodes, nodes) ) amat #>   A B C D E #> A 0 2 0 0 1 #> B 3 0 2 1 0 #> C 0 1 0 0 3 #> D 0 1 0 0 3 #> E 3 0 3 3 0 caugi_graph(   A %-->% B %o->% C %---% E,   B %o-o% D %---% E,   A %--o% E )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/motivation.html","id":"safety","dir":"Articles","previous_headings":"Motivation for caugi","what":"Safety","title":"Motivation","text":"makeshift solutions used represent causal graphs, leads bugs, confusion wasted time. caugi aim make causal graphs safe work , accidentally create invalid graphs, can focus causal problems hand, representation. ensured caugi graph object possible alter way underlying graph class becomes valid. example, creating DAG caugi, acyclicity guaranteed construction. Trying add edge create cycle throw error. generally, caugi aims graph-class safe. Think type safety, graph class level. safety comes costs; caugi doesn‚Äôt support graph type, using, graph class set \"Unknown\", operations available. However, small price pay safety clarity. caugi, prefer clarity silent misinterpretation. refer vignette vignette(\"package_use\") see (safely) use caugi package.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/motivation.html","id":"performance","dir":"Articles","previous_headings":"Motivation for caugi","what":"Performance","title":"Motivation","text":"Due underlying data structure caugi, graph objects fast query, slower initialize graph object types might . trade-favorable, graphs typically queried many times created . makes caugi suitable large graphs, performance matters, even small graphs performance gain significant packages. can read performance caugi vignette(\"performance\").","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/performance.html","id":"performance","dir":"Articles","previous_headings":"","what":"Performance","title":"Performance","text":"vignette discusses performance characteristics caugi including comparison popular igraph, bnlearn, dagitty, ggm. focus practical trade-offs arise different core data structures design choices. headline : caugi frontloads computation. , caugi spends effort constructing graph preparing indexes, queries wicked fast. high performance also due Rust backend.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/performance.html","id":"compressed-sparse-row-csr-representation","dir":"Articles","previous_headings":"Performance > Design choices","what":"Compressed Sparse Row (CSR) representation","title":"Performance","text":"core data structure caugi Compressed Sparse Row (CSR) representation graph. CSR stores vertex contiguous slice neighbor IDs pointer (offset) array marks start/end slice. format memory efficient sparse graphs. caugi graph object also stores important query information object, leading parent, child, neighbor queries done ùí™(1)\\mathcal{O}(1). yields larger memory footprint, trade-queries extremely fast.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/performance.html","id":"mutation-and-lazy-building","dir":"Articles","previous_headings":"Performance > Design choices","what":"Mutation and lazy building","title":"Performance","text":"caugi graph objects expensive build. performance downside using caugi. time, make modification caugi graph object, need rebuild graph completely, since graph object immutable design. complexity ùí™(|V|+|E|)\\mathcal{O}(|V| + |E|), VV vertex set EE edge set. However, graph object rebuild, user either calls build() directly queries graph. Therefore, need worry wasting compute time iteratively making changes caugi graph object, graph rebuilds lazily queried. caugi graphs feel mutable, , reality, . way, ensure - graph object always consistent state queried, - queries fast possible, keeping user experience smooth.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/performance.html","id":"setup","dir":"Articles","previous_headings":"Performance > Comparison","what":"Setup","title":"Performance","text":"limiting comparing graphs size n=1000n = 1000, conversion bnlearn dagitty become prohibitively slow larger graphs.","code":"set.seed(42) generate_graphs <- function(n, p) {   cg <- caugi::generate_graph(n = n, p = p, class = \"DAG\")   ig <- caugi::as_igraph(cg)   ggmg <- caugi::as_adjacency(cg)   bng <- caugi::as_bnlearn(cg)   dg <- caugi::as_dagitty(cg)   list(cg = cg, ig = ig, ggmg = ggmg, bng = bng, dg = dg) }"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/performance.html","id":"relational-queries","dir":"Articles","previous_headings":"Performance > Comparison","what":"Relational queries","title":"Performance","text":"start parents/children: bnlearn fastest , able handle smaller graphs, whereas caugi igraph can handle large graph objects almost time increase: ancestors descendants, see caugi outperforms packages several magnitudes, expect igraph, still beats, smaller margin::","code":"graphs <- generate_graphs(1000, p = 0.25) # dense graph cg <- graphs$cg ig <- graphs$ig ggmg <- graphs$ggmg bng <- graphs$bng dg <- graphs$dg  test_node_index <- sample.int(1000, 1) test_node_name <- paste0(\"V\", test_node_index) bench::mark(   caugi = {     caugi::parents(cg, test_node_name)     caugi::children(cg, test_node_name)   },   igraph = {     igraph::neighbors(ig, test_node_name, mode = \"in\")     igraph::neighbors(ig, test_node_name, mode = \"out\")   },   bnlearn = {     bnlearn::parents(bng, test_node_name)     bnlearn::children(bng, test_node_name)   },   ggm = {     ggm::pa(test_node_name, ggmg)     ggm::ch(test_node_name, ggmg)   },   dagitty = {     dagitty::parents(dg, test_node_name)     dagitty::children(dg, test_node_name)   },   check = FALSE # igraph returns igraph object ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 5 √ó 6 #>   expression      min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 caugi       55.03¬µs  60.99¬µs 15414.      67.42KB    8.00  #> 2 igraph     416.43¬µs 458.78¬µs  2034.      360.8KB    9.95  #> 3 bnlearn     34.77¬µs   37.9¬µs 17557.      38.38KB   12.0   #> 4 ggm         21.81ms   27.5ms    29.1     70.73MB   42.7   #> 5 dagitty       2.82s    2.82s     0.355    5.09MB    0.355 large_cg <- caugi::generate_graph(n = 40000, m = 1000000, class = \"DAG\") large_ig <- caugi::as_igraph(large_cg) test_node_index <- sample.int(40000, 1) test_node_name <- paste0(\"V\", test_node_index) bench::mark(   caugi = {     caugi::parents(large_cg, test_node_name)     caugi::children(large_cg, test_node_name)   },   igraph = {     igraph::neighbors(large_ig, test_node_name, mode = \"in\")     igraph::neighbors(large_ig, test_node_name, mode = \"out\")   },   check = FALSE ) #> # A tibble: 2 √ó 6 #>   expression      min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 caugi        53.6¬µs   58.6¬µs    16759.     1008B     8.42 #> 2 igraph      936.8¬µs  968.8¬µs     1023.    3.05MB    55.6 bench::mark(   caugi = {     caugi::ancestors(cg, \"V500\")     caugi::descendants(cg, \"V500\")   },   igraph = {     igraph::subcomponent(ig, \"V500\", mode = \"in\")     igraph::subcomponent(ig, \"V500\", mode = \"out\")   },   bnlearn = {     bnlearn::ancestors(bng, \"V500\")     bnlearn::descendants(bng, \"V500\")   },   dagitty = {     dagitty::ancestors(dg, \"V500\")     dagitty::descendants(dg, \"V500\")   },   check = FALSE # dagitty returns V500 as well and igraph returns an igraph ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 4 √ó 6 #>   expression      min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 caugi      134.25¬µs 146.47¬µs  2228.       65.3KB     2.00 #> 2 igraph     665.07¬µs 695.57¬µs  1400.     117.85KB     2.00 #> 3 bnlearn       1.19s    1.19s     0.838    1.33GB     9.22 #> 4 dagitty       2.83s    2.83s     0.353    5.09MB     0"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/performance.html","id":"d-separation","dir":"Articles","previous_headings":"Performance > Comparison","what":"d-separation","title":"Performance","text":"Using graph , obtain valid adjustment set check d-separation.","code":"valid_adjustment_set <- caugi::adjustment_set(cg, \"V500\", \"V681\", type = \"backdoor\") valid_adjustment_set #>   [1] \"V7\"    \"V15\"   \"V18\"   \"V24\"   \"V33\"   \"V34\"   \"V68\"   \"V88\"   \"V93\"   #>  [10] \"V121\"  \"V134\"  \"V157\"  \"V168\"  \"V197\"  \"V202\"  \"V206\"  \"V213\"  \"V232\"  #>  [19] \"V262\"  \"V287\"  \"V290\"  \"V291\"  \"V302\"  \"V306\"  \"V314\"  \"V330\"  \"V332\"  #>  [28] \"V342\"  \"V361\"  \"V363\"  \"V368\"  \"V369\"  \"V371\"  \"V385\"  \"V389\"  \"V393\"  #>  [37] \"V409\"  \"V416\"  \"V422\"  \"V425\"  \"V429\"  \"V437\"  \"V444\"  \"V457\"  \"V469\"  #>  [46] \"V476\"  \"V480\"  \"V493\"  \"V504\"  \"V510\"  \"V514\"  \"V522\"  \"V530\"  \"V543\"  #>  [55] \"V555\"  \"V557\"  \"V560\"  \"V564\"  \"V570\"  \"V581\"  \"V588\"  \"V596\"  \"V607\"  #>  [64] \"V620\"  \"V621\"  \"V636\"  \"V641\"  \"V652\"  \"V653\"  \"V660\"  \"V664\"  \"V669\"  #>  [73] \"V673\"  \"V677\"  \"V697\"  \"V701\"  \"V707\"  \"V735\"  \"V743\"  \"V748\"  \"V768\"  #>  [82] \"V785\"  \"V835\"  \"V836\"  \"V844\"  \"V847\"  \"V890\"  \"V893\"  \"V900\"  \"V911\"  #>  [91] \"V912\"  \"V923\"  \"V924\"  \"V927\"  \"V943\"  \"V950\"  \"V964\"  \"V966\"  \"V973\"  #> [100] \"V974\"  \"V989\"  \"V991\"  \"V996\"  \"V1000\" bench::mark(   caugi = caugi::d_separated(cg, \"V500\", \"V681\", valid_adjustment_set),   bnlearn = bnlearn::dsep(bng, \"V500\", \"V681\", valid_adjustment_set),   dagitty = dagitty::dseparated(dg, \"V500\", \"V681\", valid_adjustment_set) ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 3 √ó 6 #>   expression      min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 caugi       34.65ms  34.84ms    28.6     33.05KB     0    #> 2 bnlearn       4.11s    4.11s     0.243    3.22GB     4.38 #> 3 dagitty       2.17s    2.17s     0.462    4.19MB     0"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/performance.html","id":"subgraph-building","dir":"Articles","previous_headings":"Performance > Comparison","what":"Subgraph (building)","title":"Performance","text":"see example frontloading hurts performance. build subgraph, rebuild entire caugi graph object. , see caugi outperforms packages queries (except parents/children bnlearn), slower building graph objects , shows subgraph benchmark:","code":"subgraph_nodes_index <- sample.int(1000, 500) subgraph_nodes <- paste0(\"V\", subgraph_nodes_index) bench::mark(   caugi = {     caugi::subgraph(cg, subgraph_nodes)   },   igraph = {     igraph::subgraph(ig, subgraph_nodes)   },   bnlearn = {     bnlearn::subgraph(bng, subgraph_nodes)   },   check = FALSE ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 3 √ó 6 #>   expression      min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 caugi       14.07ms  17.04ms    59.5        12MB     1.98 #> 2 igraph       1.84ms   1.89ms   525.       81.1KB     0    #> 3 bnlearn       1.03s    1.03s     0.975   983.6MB     1.95"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/articles/performance.html","id":"session-info","dir":"Articles","previous_headings":"Performance","what":"Session info","title":"Performance","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] jsonlite_2.0.0      BiocManager_1.30.26 dplyr_1.1.4         #>  [4] compiler_4.5.1      tidyselect_1.2.1    Rcpp_1.1.0          #>  [7] parallel_4.5.1      jquerylib_0.1.4     systemfonts_1.3.1   #> [10] textshaping_1.0.4   boot_1.3-31         yaml_2.3.10         #> [13] fastmap_1.2.0       R6_2.6.1            generics_0.1.4      #> [16] curl_7.0.0          igraph_2.2.1        knitr_1.50          #> [19] BiocGenerics_0.54.1 htmlwidgets_1.6.4   MASS_7.3-65         #> [22] graph_1.86.0        tibble_3.3.0        desc_1.4.3          #> [25] bslib_0.9.0         pillar_1.11.1       rlang_1.1.6         #> [28] utf8_1.2.6          V8_8.0.1            cachem_1.1.0        #> [31] bnlearn_5.1         xfun_0.53           fs_1.6.6            #> [34] sass_0.4.10         S7_0.2.0            cli_3.6.5           #> [37] pkgdown_2.1.3       magrittr_2.0.4      digest_0.6.37       #> [40] lifecycle_1.0.4     dagitty_0.3-4       caugi_0.0.0.9000    #> [43] vctrs_0.6.5         bench_1.1.4         data.table_1.17.8   #> [46] ggm_2.5.2           evaluate_1.0.5      glue_1.8.0          #> [49] ragg_1.5.0          stats4_4.5.1        profmem_0.7.0       #> [52] rmarkdown_2.30      tools_4.5.1         pkgconfig_2.0.3     #> [55] htmltools_0.5.8.1"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Frederik Fabricius-Bjerre. Maintainer.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fabricius-Bjerre F (2025). caugi: Causal Graph Interface. R package version 0.0.0.9000, https://frederikfabriciusbjerre.github.io/caugi/.","code":"@Manual{,   title = {caugi: Causal Graph Interface},   author = {Frederik Fabricius-Bjerre},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://frederikfabriciusbjerre.github.io/caugi/}, }"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/index.html","id":"caugi","dir":"","previous_headings":"","what":"Causal Graph Interface","title":"Causal Graph Interface","text":"Causal Graph Interface (R) ‚Äî fast, tidy toolbox building, coercing analysing causal graphs. caugi (pronounced ‚Äúcorgi‚Äù) wraps high‚Äëperformance Rust core pipe‚Äëfriendly R interface. Convert many graph formats, compose graphs expressive infix operators, run algorithms large graphs. caugi aims go‚Äëpackage causal graphs R.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Causal Graph Interface","text":"can install development version caugi GitHub :","code":"# install.packages(\"pak\") pak::pak(\"frederikfabriciusbjerre/caugi\")  # ... or wait for the first CRAN release # install.packages(\"caugi\")"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Causal Graph Interface","text":"caugi syntax close draw graph whiteboard. tiny DAG: can query :","code":"library(caugi)  cg <- caugi_graph(A %-->% B + C,   B %-->% D,   C %-->% D,   class = \"DAG\" ) # optional, guarantees acyclicity by construction print(cg) #> # A tibble: 4 √ó 1 #>   name  #>   <chr> #> 1 A     #> 2 B     #> 3 C     #> 4 D     #> # A tibble: 4 √ó 3 #>   from  edge  to    #>   <chr> <chr> <chr> #> 1 A     -->   B     #> 2 A     -->   C     #> 3 B     -->   D     #> 4 C     -->   D neighbors(cg, \"D\") #> [1] \"B\" \"C\" parents(cg, \"D\") #> [1] \"B\" \"C\" children(cg, \"A\") #> [1] \"B\" \"C\" ancestors(cg, \"D\") #> [1] \"A\" \"B\" \"C\" descendants(cg, \"A\") #> [1] \"B\" \"C\" \"D\""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/adjustment_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute an adjustment set ‚Äî adjustment_set","title":"Compute an adjustment set ‚Äî adjustment_set","text":"Computes adjustment set X -> Y DAG.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/adjustment_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute an adjustment set ‚Äî adjustment_set","text":"","code":"adjustment_set(   cg,   X = NULL,   Y = NULL,   X_index = NULL,   Y_index = NULL,   type = c(\"optimal\", \"parents\", \"backdoor\") )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/adjustment_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute an adjustment set ‚Äî adjustment_set","text":"cg caugi_graph object. X, Y Node names. X_index, Y_index Optional numeric 1-based indices. type One \"parents\", \"backdoor\", \"optimal\". optimal option computes O-set.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/adjustment_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute an adjustment set ‚Äî adjustment_set","text":"tibble name column (possibly 0 rows).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/adjustment_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute an adjustment set ‚Äî adjustment_set","text":"Types supported: \"parents\": \\(\\bigcup \\mathrm{Pa}(X)\\) minus \\(X \\cup Y\\) \"backdoor\": Pearl backdoor formula \"optimal\": O-set (single x single y)","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/adjustment_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute an adjustment set ‚Äî adjustment_set","text":"","code":"cg <- caugi_graph(   C %-->% X,   X %-->% F,   X %-->% D,   A %-->% X,   A %-->% K,   K %-->% Y,   D %-->% Y,   D %-->% G,   Y %-->% H,   class = \"DAG\" )  adjustment_set(cg, \"X\", \"Y\", type = \"parents\") # C, A #> [1] \"C\" \"A\" adjustment_set(cg, \"X\", \"Y\", type = \"backdoor\") # C, A #> [1] \"C\" \"A\" adjustment_set(cg, \"X\", \"Y\", type = \"optimal\") # K #> [1] \"K\""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/aid.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjustment Identification Distance ‚Äî aid","title":"Adjustment Identification Distance ‚Äî aid","text":"Compute Adjustment Identification Distance (AID) two graphs using gadjid Rust package.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/aid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjustment Identification Distance ‚Äî aid","text":"","code":"aid(truth, guess, type = c(\"oset\", \"ancestor\", \"parent\"))"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/aid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjustment Identification Distance ‚Äî aid","text":"truth caugi_graph object. guess caugi_graph object. type character string specifying type AID compute. Options \"oset\" (default), \"ancestor\", \"parent\".","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/aid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjustment Identification Distance ‚Äî aid","text":"list containing score (normalized) count.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/all_backdoor_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all backdoor sets up to a certain size. ‚Äî all_backdoor_sets","title":"Get all backdoor sets up to a certain size. ‚Äî all_backdoor_sets","text":"function returns backdoor sets size max_size, per default set 10.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/all_backdoor_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all backdoor sets up to a certain size. ‚Äî all_backdoor_sets","text":"","code":"all_backdoor_sets(   cg,   X = NULL,   Y = NULL,   X_index = NULL,   Y_index = NULL,   minimal = TRUE,   max_size = 3L )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/all_backdoor_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all backdoor sets up to a certain size. ‚Äî all_backdoor_sets","text":"cg caugi_graph. X, Y Single node name. X_index, Y_index Optional 1-based indices (exclusive name args). minimal Logical; TRUE (default), minimal sets returned. max_size Integer; maximum size sets consider (default 3).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/all_backdoor_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all backdoor sets up to a certain size. ‚Äî all_backdoor_sets","text":"list character vectors, adjustment set (possibly empty).","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/all_backdoor_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all backdoor sets up to a certain size. ‚Äî all_backdoor_sets","text":"","code":"cg <- caugi_graph(   C %-->% X,   X %-->% F,   X %-->% D,   A %-->% X,   A %-->% K,   K %-->% Y,   D %-->% Y,   D %-->% G,   Y %-->% H,   class = \"DAG\" )  all_backdoor_sets(cg, X = \"X\", Y = \"Y\", max_size = 3L, minimal = FALSE) #> [[1]] #> [1] \"A\" #>  #> [[2]] #> [1] \"K\" #>  #> [[3]] #> [1] \"C\" \"A\" #>  #> [[4]] #> [1] \"C\" \"K\" #>  #> [[5]] #> [1] \"A\" \"K\" #>  #> [[6]] #> [1] \"C\" \"A\" \"K\" #>  #> [[1]] #> [1] \"A\" #> #> [[2]] #> [1] \"K\" #> #> [[3]] #> [1] \"C\" \"A\" #> #> [[4]] #> [1] \"C\" \"K\" #> #> [[5]] #> [1] \"A\" \"K\" #> #> [[6]] #> [1] \"C\" \"A\" \"K\"  all_backdoor_sets(cg, X = \"X\", Y = \"Y\", max_size = 3L, minimal = TRUE) #> [[1]] #> [1] \"A\" #>  #> [[2]] #> [1] \"K\" #>  #> [[1]] #> [1] \"A\" #> #> [[2]] #> [1] \"K\""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/ancestors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ancestors of nodes in a caugi_graph ‚Äî ancestors","title":"Get ancestors of nodes in a caugi_graph ‚Äî ancestors","text":"Get ancestors nodes caugi_graph","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/ancestors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ancestors of nodes in a caugi_graph ‚Äî ancestors","text":"","code":"ancestors(cg, nodes = NULL, index = NULL)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/ancestors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ancestors of nodes in a caugi_graph ‚Äî ancestors","text":"cg caugi_graph object. nodes vector node names, vector unquoted node names, expression combining + c(). index vector node indexes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/ancestors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ancestors of nodes in a caugi_graph ‚Äî ancestors","text":"Either character vector node names (single node requested) list character vectors (multiple nodes requested).","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/ancestors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ancestors of nodes in a caugi_graph ‚Äî ancestors","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %-->% C,   class = \"DAG\" ) ancestors(cg, \"A\") # NULL #> NULL ancestors(cg, index = 2) # \"A\" #> [1] \"A\" ancestors(cg, \"B\") # \"A\" #> [1] \"A\" ancestors(cg, c(\"B\", \"C\")) #> $B #> [1] \"A\" #>  #> $C #> [1] \"A\" \"B\" #>  #> $B #> [1] \"A\" #> #> $C #> [1] \"A\" \"B\""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_adjacency.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a caugi_graph to an adjacency matrix ‚Äî as_adjacency","title":"Convert a caugi_graph to an adjacency matrix ‚Äî as_adjacency","text":"take edge types one found PDAG.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_adjacency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a caugi_graph to an adjacency matrix ‚Äî as_adjacency","text":"","code":"as_adjacency(x)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_adjacency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a caugi_graph to an adjacency matrix ‚Äî as_adjacency","text":"x caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_adjacency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a caugi_graph to an adjacency matrix ‚Äî as_adjacency","text":"integer 0/1 adjacency matrix row/col names.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_adjacency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a caugi_graph to an adjacency matrix ‚Äî as_adjacency","text":"","code":"cg <- caugi_graph(   A %-->% B,   class = \"DAG\" ) adj <- as_adjacency(cg)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_bnlearn.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a caugi_graph to a bnlearn network ‚Äî as_bnlearn","title":"Convert a caugi_graph to a bnlearn network ‚Äî as_bnlearn","text":"Convert caugi_graph bnlearn network","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_bnlearn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a caugi_graph to a bnlearn network ‚Äî as_bnlearn","text":"","code":"as_bnlearn(x)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_bnlearn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a caugi_graph to a bnlearn network ‚Äî as_bnlearn","text":"x caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_bnlearn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a caugi_graph to a bnlearn network ‚Äî as_bnlearn","text":"bnlearn DAG.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_bnlearn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a caugi_graph to a bnlearn network ‚Äî as_bnlearn","text":"","code":"cg <- caugi_graph(   A %-->% B,   class = \"DAG\" ) g_bn <- as_bnlearn(cg)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_caugi.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a caugi_graph ‚Äî as_caugi","title":"Convert to a caugi_graph ‚Äî as_caugi","text":"Convert object caugi_graph. object can graphNEL, ‚Äúmatrix, data frame `, ``, `edge_type` columns.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_caugi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a caugi_graph ‚Äî as_caugi","text":"","code":"as_caugi(   x,   class = c(\"DAG\", \"PDAG\", \"PAG\", \"UNKNOWN\"),   simple = TRUE,   build = TRUE,   collapse = FALSE,   collapse_to = \"---\",   ... )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_caugi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a caugi_graph ‚Äî as_caugi","text":"x object convert caugi_graph. class \"DAG\", \"PDAG\", \"PAG\", \"UNKNOWN\". \"PAG\" supported integer coded matrices. simple logical. TRUE (default) graph simple (multiple edges self-loops). build logical. TRUE (default) build graph now, otherwise build lazily first query using build(). collapse logical. TRUE collapse mutual directed edges undirected edges. Default FALSE. collapse_to Character string use edge glyph collapsing. registered symmetrical edge glyph. Default \"---\". ... Additional arguments passed specific methods.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_caugi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a caugi_graph ‚Äî as_caugi","text":"caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_caugi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert to a caugi_graph ‚Äî as_caugi","text":"matrices, as_caugi assumes rows nodes columns nodes. Thus, graph, G: ‚Äì> B, G[\"\", \"B\"] == 1 G[\"B\", \"\"] == 0. PAGs, integer codes follows (used pcalg): 0: edge 1: tail (e.g., o-- B --- B) 2: arrowhead (e.g., --> B o-> B) 3: circle (e.g., o-o B)","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_caugi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a caugi_graph ‚Äî as_caugi","text":"","code":"# igraph ig <- igraph::graph_from_literal(A - +B, B - +C) cg_ig <- as_caugi(ig, class = \"DAG\")  # graphNEL gn <- graph::graphNEL(nodes = c(\"A\", \"B\", \"C\"), edgemode = \"directed\") gn <- graph::addEdge(\"A\", \"B\", gn) gn <- graph::addEdge(\"B\", \"C\", gn) cg_gn <- as_caugi(gn, class = \"DAG\")  # adjacency matrix m <- matrix(0L, 3, 3, dimnames = list(LETTERS[1:3], LETTERS[1:3])) m[\"A\", \"B\"] <- 1L m[\"B\", \"C\"] <- 1L cg_adj <- as_caugi(m, class = \"DAG\")  # bnlearn bn <- bnlearn::model2network(\"[A][B|A][C|B]\") cg_bn <- as_caugi(bn, class = \"DAG\")  # dagitty dg <- dagitty::dagitty(\"dag {  A -> B  B -> C  }\") cg_dg <- as_caugi(dg, class = \"DAG\")  cg <- caugi_graph(A %-->% B %-->% C, class = \"DAG\")  # check that all nodes are equal in all graph objects for (cg_converted in list(cg_ig, cg_gn, cg_adj, cg_bn, cg_dg)) {   stopifnot(identical(nodes(cg), nodes(cg_converted)))   stopifnot(identical(edges(cg), edges(cg_converted))) }  # collapse mutual edges ig2 <- igraph::graph_from_literal(A - +B, B - +A, C - +D) cg2 <- as_caugi(ig2, class = \"PDAG\", collapse = TRUE, collapse_to = \"---\")  # coded integer matrix for PAGs (pcalg style) nm <- c(\"A\", \"B\", \"C\", \"D\") M <- matrix(0L, 4, 4, dimnames = list(nm, nm))  # A --> B M[\"A\", \"B\"] <- 2L # mark at B end M[\"B\", \"A\"] <- 3L # mark at A end  # A --- C M[\"A\", \"C\"] <- 3L M[\"C\", \"A\"] <- 3L  # B o-> C M[\"B\", \"C\"] <- 2L M[\"C\", \"B\"] <- 1L  # C o-o D M[\"C\", \"D\"] <- 1L M[\"D\", \"C\"] <- 1L  cg <- as_caugi(M, class = \"PAG\")"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_dagitty.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a caugi_graph to a dagitty graph ‚Äî as_dagitty","title":"Convert a caugi_graph to a dagitty graph ‚Äî as_dagitty","text":"Convert caugi_graph dagitty graph","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_dagitty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a caugi_graph to a dagitty graph ‚Äî as_dagitty","text":"","code":"as_dagitty(x)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_dagitty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a caugi_graph to a dagitty graph ‚Äî as_dagitty","text":"x caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_dagitty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a caugi_graph to a dagitty graph ‚Äî as_dagitty","text":"dagitty object.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_dagitty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a caugi_graph to a dagitty graph ‚Äî as_dagitty","text":"","code":"cg <- caugi_graph(   A %-->% B,   class = \"DAG\" ) g_dg <- as_dagitty(cg)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_igraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a caugi_graph to an igraph object ‚Äî as_igraph","title":"Convert a caugi_graph to an igraph object ‚Äî as_igraph","text":"Convert caugi_graph igraph object","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_igraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a caugi_graph to an igraph object ‚Äî as_igraph","text":"","code":"as_igraph(x, ...)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_igraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a caugi_graph to an igraph object ‚Äî as_igraph","text":"x caugi_graph object. ... Additional arguments passed igraph::graph_from_data_frame().","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_igraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a caugi_graph to an igraph object ‚Äî as_igraph","text":"igraph object representing graph structure.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/as_igraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a caugi_graph to an igraph object ‚Äî as_igraph","text":"","code":"cg <- caugi_graph(   A %-->% B,   class = \"DAG\" ) ig <- as_igraph(cg)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/build.html","id":null,"dir":"Reference","previous_headings":"","what":"Build the graph now ‚Äî build","title":"Build the graph now ‚Äî build","text":"caugi_graph modified (nodes edges added removed), marked built, .e cg@built = FALSE. function builds graph using Rust backend updates internal pointer graph. graph already built, returned.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build the graph now ‚Äî build","text":"","code":"build(cg, ...)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build the graph now ‚Äî build","text":"cg caugi_graph object. ... used.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build the graph now ‚Äî build","text":"built caugi_graph object.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/build.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build the graph now ‚Äî build","text":"","code":"# initialize empty graph and build slowly cg <- caugi_graph(class = \"PDAG\")  cg <- cg |>   add_nodes(c(\"A\", \"B\", \"C\", \"D\", \"E\")) |> # A, B, C, D, E   add_edges(A %-->% B %-->% C) |> # A --> B --> C, D, E   set_edges(B %---% C) # A --> B --- C, D, E  cg <- remove_edges(cg, B %---% C) |> # A --> B, C, D, E   remove_nodes(c(\"C\", \"D\", \"E\")) # A --> B  # verbs do not build the Rust backend cg@built # FALSE #> [1] FALSE build(cg) #> # A tibble: 2 √ó 1 #>   name  #>   <chr> #> 1 A     #> 2 B     #> # A tibble: 1 √ó 3 #>   from  edge  to    #>   <chr> <chr> <chr> #> 1 A     -->   B     cg@built # TRUE #> [1] TRUE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"caugi: A tidy interface to causal graphs ‚Äî caugi-package","title":"caugi: A tidy interface to causal graphs ‚Äî caugi-package","text":"caugi wraps high-performance Rust core pipe-friendly R API.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"caugi: A tidy interface to causal graphs ‚Äî caugi-package","text":"Frederik Fabricius-Bjerre frederik@fabriciusbjerre.dk,","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a caugi_graph from edge expressions. ‚Äî caugi_graph","title":"Create a caugi_graph from edge expressions. ‚Äî caugi_graph","text":"Create caugi_graph series edge expressions using infix operators. Nodes can specified symbols, strings, numbers. following edge operators supported default: %-->% directed edges (‚Äì> B) %---% undirected edges (‚Äî B) %<->% bidirected edges (<-> B) %o->% partially directed edges (o-> B) %--o% partially undirected edges (‚Äìo B) %o-o% partial edges (o-o B) can register additional edge types using register_caugi_edge().","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a caugi_graph from edge expressions. ‚Äî caugi_graph","text":"","code":"caugi_graph(   ...,   from = NULL,   edge = NULL,   to = NULL,   nodes = NULL,   simple = TRUE,   build = TRUE,   class = c(\"UNKNOWN\", \"DAG\", \"PDAG\"),   state = NULL )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a caugi_graph from edge expressions. ‚Äî caugi_graph","text":"... Edge expressions using supported infix operators, nodes given symbols strings. Multiple edges can combined using +: --> B + C, indicating edge B C. Nodes can also grouped using c(...) parentheses. Character vector source node names. Optional; mutually exclusive .... edge Character vector edge types. Optional; mutually exclusive .... Character vector target node names. Optional; mutually exclusive .... nodes Character vector node names declare isolated nodes. simple Logical; TRUE (default), graph simple graph, function throw error input contains parallel edges self-loops. build Logical; TRUE (default), graph built using Rust backend. FALSE, graph built, Rust backend used. graph build, queries made graph calling build(). Note: Even build = TRUE, edges nodes provided, graph built pointer NULL. class Character; one \"UNKNOWN\", \"DAG\", \"PDAG\". state internal use. Build graph supplying pre-constructed state environment.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a caugi_graph from edge expressions. ‚Äî caugi_graph","text":"caugi_graph S7 object containing nodes, edges, pointer underlying Rust graph structure.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a caugi_graph from edge expressions. ‚Äî caugi_graph","text":"","code":"# create a simple DAG (using NSE) cg <- caugi_graph(   A %-->% B + C,   B %-->% D,   class = \"DAG\" )  # create a PDAG with undirected edges (using NSE) cg2 <- caugi_graph(   A %-->% B + C,   B %---% D,   E, # no neighbors for this node   class = \"PDAG\" )  # create a DAG (using SE) cg3 <- caugi_graph(   from = c(\"A\", \"A\", \"B\"),   edge = c(\"-->\", \"-->\", \"-->\"),   to = c(\"B\", \"C\", \"D\"),   nodes = c(\"A\", \"B\", \"C\", \"D\", \"E\"),   class = \"DAG\" )  # create a non-simple graph cg4 <- caugi_graph(   A %-->% B,   B %-->% A,   class = \"UNKNOWN\",   simple = FALSE )  cg4@simple # FALSE #> [1] FALSE cg4@built # TRUE #> [1] TRUE cg4@graph_class # \"UNKNOWN\" #> [1] \"UNKNOWN\"  # create graph, but don't built Rust object yet, which is needed for queries cg5 <- caugi_graph(   A %-->% B + C,   B %-->% D,   class = \"DAG\",   build = FALSE )  cg@built # FALSE #> [1] TRUE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_verbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Manipulate nodes and edges of a caugi_graph ‚Äî caugi_verbs","title":"Manipulate nodes and edges of a caugi_graph ‚Äî caugi_verbs","text":"Add, remove, set nodes edges / caugi_graph object. Edges can specified using expressions infix operators. Alternatively, edges added specified using , edge, arguments.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_verbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manipulate nodes and edges of a caugi_graph ‚Äî caugi_verbs","text":"","code":"add_edges(cg, ..., from = NULL, edge = NULL, to = NULL)  remove_edges(cg, ..., from = NULL, edge = NULL, to = NULL)  set_edges(cg, ..., from = NULL, edge = NULL, to = NULL)  add_nodes(cg, ..., name = NULL)  remove_nodes(cg, ..., name = NULL)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_verbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manipulate nodes and edges of a caugi_graph ‚Äî caugi_verbs","text":"cg caugi_graph object. ... Expressions specifying edges add using infix operators, nodes add using unquoted names, vectors via c(), + composition. Character vector source node names. Default NULL. edge Character vector edge types. Default NULL. Character vector target node names. Default NULL. name Character vector node names. Default NULL.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_verbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manipulate nodes and edges of a caugi_graph ‚Äî caugi_verbs","text":"updated caugi_graph.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_verbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manipulate nodes and edges of a caugi_graph ‚Äî caugi_verbs","text":"Caugi graph verbs","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_verbs.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Manipulate nodes and edges of a caugi_graph ‚Äî caugi_verbs","text":"add_edges(): Add edges. remove_edges(): Remove edges. set_edges(): Set edge type given pair(s). add_nodes(): Add nodes. remove_nodes(): Remove nodes.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/caugi_verbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manipulate nodes and edges of a caugi_graph ‚Äî caugi_verbs","text":"","code":"# initialize empty graph and build slowly cg <- caugi_graph(class = \"PDAG\")  cg <- cg |>   add_nodes(c(\"A\", \"B\", \"C\", \"D\", \"E\")) |> # A, B, C, D, E   add_edges(A %-->% B %-->% C) |> # A --> B --> C, D, E   set_edges(B %---% C) # A --> B --- C, D, E  cg <- remove_edges(cg, B %---% C) |> # A --> B, C, D, E   remove_nodes(c(\"C\", \"D\", \"E\")) # A --> B  # verbs do not build the Rust backend cg@built # FALSE #> [1] FALSE build(cg) #> # A tibble: 2 √ó 1 #>   name  #>   <chr> #> 1 A     #> 2 B     #> # A tibble: 1 √ó 3 #>   from  edge  to    #>   <chr> <chr> <chr> #> 1 A     -->   B     cg@built # TRUE #> [1] TRUE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/children.html","id":null,"dir":"Reference","previous_headings":"","what":"Get children of nodes in a caugi_graph ‚Äî children","title":"Get children of nodes in a caugi_graph ‚Äî children","text":"Get children nodes caugi_graph","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get children of nodes in a caugi_graph ‚Äî children","text":"","code":"children(cg, nodes = NULL, index = NULL)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get children of nodes in a caugi_graph ‚Äî children","text":"cg caugi_graph object. nodes vector node names, vector unquoted node names, expression combining + c(). index vector node indexes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get children of nodes in a caugi_graph ‚Äî children","text":"Either character vector node names (single node requested) list character vectors (multiple nodes requested).","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/children.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get children of nodes in a caugi_graph ‚Äî children","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %-->% C,   class = \"DAG\" ) children(cg, \"A\") # \"B\" #> [1] \"B\" children(cg, index = 2) # \"C\" #> [1] \"C\" children(cg, \"B\") # \"C\" #> [1] \"C\" children(cg, c(\"B\", \"C\")) #> $B #> [1] \"C\" #>  #> $C #> NULL #>  #> $B #> [1] \"C\" #> #> $C #> NULL"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/d_separated.html","id":null,"dir":"Reference","previous_headings":"","what":"Are X and Y d-separated given Z? ‚Äî d_separated","title":"Are X and Y d-separated given Z? ‚Äî d_separated","text":"Checks whether every node X d-separated every node Y given Z DAG.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/d_separated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are X and Y d-separated given Z? ‚Äî d_separated","text":"","code":"d_separated(   cg,   X = NULL,   Y = NULL,   Z = NULL,   X_index = NULL,   Y_index = NULL,   Z_index = NULL )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/d_separated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are X and Y d-separated given Z? ‚Äî d_separated","text":"cg caugi_graph object. X, Y, Z Node selectors: character vector names, unquoted expression (supports + c()), NULL. Use *_index pass 1-based indices. Z NULL missing, nodes conditioned . X_index, Y_index, Z_index Optional numeric 1-based indices (exclusive X,Y,Z respectively).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/d_separated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are X and Y d-separated given Z? ‚Äî d_separated","text":"Logical scalar.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/d_separated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are X and Y d-separated given Z? ‚Äî d_separated","text":"","code":"cg <- caugi_graph(   C %-->% X,   X %-->% F,   X %-->% D,   A %-->% X,   A %-->% K,   K %-->% Y,   D %-->% Y,   D %-->% G,   Y %-->% H,   class = \"DAG\" )  d_separated(cg, \"X\", \"Y\", Z = c(\"A\", \"D\")) # TRUE #> [1] TRUE d_separated(cg, \"X\", \"Y\", Z = NULL) # FALSE #> [1] FALSE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/descendants.html","id":null,"dir":"Reference","previous_headings":"","what":"Get descendants of nodes in a caugi_graph ‚Äî descendants","title":"Get descendants of nodes in a caugi_graph ‚Äî descendants","text":"Get descendants nodes caugi_graph","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/descendants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get descendants of nodes in a caugi_graph ‚Äî descendants","text":"","code":"descendants(cg, nodes = NULL, index = NULL)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/descendants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get descendants of nodes in a caugi_graph ‚Äî descendants","text":"cg caugi_graph object. nodes vector node names, vector unquoted node names, expression combining + c(). index vector node indexes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/descendants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get descendants of nodes in a caugi_graph ‚Äî descendants","text":"Either character vector node names (single node requested) list character vectors (multiple nodes requested).","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/descendants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get descendants of nodes in a caugi_graph ‚Äî descendants","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %-->% C,   class = \"DAG\" ) descendants(cg, \"A\") # \"B\" \"C\" #> [1] \"B\" \"C\" descendants(cg, index = 2) # \"C\" #> [1] \"C\" descendants(cg, \"B\") # \"C\" #> [1] \"C\" descendants(cg, c(\"B\", \"C\")) #> $B #> [1] \"C\" #>  #> $C #> NULL #>  #> $B #> [1] \"C\" #> #> $C #> NULL"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-cg_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: Create the state environment for a caugi_graph ‚Äî .cg_state","title":"Internal: Create the state environment for a caugi_graph ‚Äî .cg_state","text":"Internal function create state environment caugi_graph. function intended used directly users.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-cg_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: Create the state environment for a caugi_graph ‚Äî .cg_state","text":"","code":".cg_state(   nodes,   edges,   ptr,   built,   simple,   class,   name_index_map,   index_name_map )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-cg_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal: Create the state environment for a caugi_graph ‚Äî .cg_state","text":"nodes tibble nodes name column. edges tibble edges , edge, columns. ptr pointer underlying Rust graph structure (NULL built). built Logical; whether graph built. simple Logical; whether graph simple (parallel edges self-loops). class Character; one \"UNKNOWN\", \"DAG\", \"PDAG\". name_index_map fastmap mapping node names zero indexed indices.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-cg_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal: Create the state environment for a caugi_graph ‚Äî .cg_state","text":"environment containing graph state.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-collect_edges_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect edges and nodes ‚Äî .collect_edges_nodes","title":"Collect edges and nodes ‚Äî .collect_edges_nodes","text":"Collect edges (via .parse_edge_arg) explicitly declared nodes (edges).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-collect_edges_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect edges and nodes ‚Äî .collect_edges_nodes","text":"","code":".collect_edges_nodes(calls)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-collect_edges_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect edges and nodes ‚Äî .collect_edges_nodes","text":"calls list expressions caugi_graph(...)","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-collect_edges_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect edges and nodes ‚Äî .collect_edges_nodes","text":"list two elements: edges: tibble columns , edge, declared: character vector explicitly declared nodes","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-combine_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine terms with '+' ‚Äî .combine_plus","title":"Combine terms with '+' ‚Äî .combine_plus","text":"Combine list terms single left-associative '+' call.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-combine_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine terms with '+' ‚Äî .combine_plus","text":"","code":".combine_plus(terms)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-combine_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine terms with '+' ‚Äî .combine_plus","text":"terms list expressions combine.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-combine_plus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine terms with '+' ‚Äî .combine_plus","text":"single expression combining terms '+'.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-contains_edge.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the expression contain an edge call? ‚Äî .contains_edge","title":"Does the expression contain an edge call? ‚Äî .contains_edge","text":"Recursively check expression contains edge call.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-contains_edge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the expression contain an edge call? ‚Äî .contains_edge","text":"","code":".contains_edge(expr)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-contains_edge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the expression contain an edge call? ‚Äî .contains_edge","text":"expr expression check","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-contains_edge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the expression contain an edge call? ‚Äî .contains_edge","text":"TRUE expression contains edge call, FALSE otherwise","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_ops_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get edge operators ‚Äî .edge_ops_get","title":"Get edge operators ‚Äî .edge_ops_get","text":"function gets default caugi edge operators","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_ops_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get edge operators ‚Äî .edge_ops_get","text":"","code":".edge_ops_get()"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_ops_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get edge operators ‚Äî .edge_ops_get","text":"current edge operators caugi environment","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Edge specification infix operators ‚Äî .edge_spec","title":"Edge specification infix operators ‚Äî .edge_spec","text":"infix operators used specify edges caugi_graph(). function helps build infix operators.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edge specification infix operators ‚Äî .edge_spec","text":"","code":".edge_spec(from_sym, to_expr, glyph)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edge specification infix operators ‚Äî .edge_spec","text":"from_sym symbol representing source node. to_expr expression representing target node(s). Can symbol, string, number, c(...), combination using +. glyph string representing edge glyph (e.g., \"-->\", \"<->\").","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edge specification infix operators ‚Äî .edge_spec","text":"tibble columns , , edge.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_units_to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn edge units into a tibble of edges ‚Äî .edge_units_to_tibble","title":"Turn edge units into a tibble of edges ‚Äî .edge_units_to_tibble","text":"Convert list edge units tibble columns , edge, .","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_units_to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn edge units into a tibble of edges ‚Äî .edge_units_to_tibble","text":"","code":".edge_units_to_tibble(units)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_units_to_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn edge units into a tibble of edges ‚Äî .edge_units_to_tibble","text":"units list edge units, lhs, rhs, glyph.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-edge_units_to_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn edge units into a tibble of edges ‚Äî .edge_units_to_tibble","text":"tibble columns , edge, .","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-expand_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand node expressions ‚Äî .expand_nodes","title":"Expand node expressions ‚Äî .expand_nodes","text":"Expand node expressions: symbol, \"B\", c(...), +, (...)","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-expand_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand node expressions ‚Äî .expand_nodes","text":"","code":".expand_nodes(expr, env = parent.frame())"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-expand_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand node expressions ‚Äî .expand_nodes","text":"expr expression representing nodes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-expand_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand node expressions ‚Äî .expand_nodes","text":"character vector node names.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-expand_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to expand the right-hand side of an edge specification ‚Äî .expand_targets","title":"Helper to expand the right-hand side of an edge specification ‚Äî .expand_targets","text":"function expands right-hand side edge specification character vector target node names. handles various forms input, including symbols, calls +, calls c(), character literals.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-expand_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to expand the right-hand side of an edge specification ‚Äî .expand_targets","text":"","code":".expand_targets(expr)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-expand_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to expand the right-hand side of an edge specification ‚Äî .expand_targets","text":"expr expression representing target node(s).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-expand_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to expand the right-hand side of an edge specification ‚Äî .expand_targets","text":"character vector target node names.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-flatten_edge_chain.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten a chained edge expression ‚Äî .flatten_edge_chain","title":"Flatten a chained edge expression ‚Äî .flatten_edge_chain","text":"Given chained edge expression, flatten terms operators.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-flatten_edge_chain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten a chained edge expression ‚Äî .flatten_edge_chain","text":"","code":".flatten_edge_chain(call_expr)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-flatten_edge_chain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten a chained edge expression ‚Äî .flatten_edge_chain","text":"call_expr call expression representing chained edge.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-flatten_edge_chain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten a chained edge expression ‚Äî .flatten_edge_chain","text":"list two elements, terms ops.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-get_edges_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Build edges tibble from verb call. ‚Äî .get_edges_tibble","title":"Build edges tibble from verb call. ‚Äî .get_edges_tibble","text":"Internal helper build edges tibble verb call.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-get_edges_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build edges tibble from verb call. ‚Äî .get_edges_tibble","text":"","code":".get_edges_tibble(from, edge, to, calls)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-get_edges_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build edges tibble from verb call. ‚Äî .get_edges_tibble","text":"Character vector source node names. edge Character vector edge types. Character vector target node names. calls List calls ....","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-get_edges_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build edges tibble from verb call. ‚Äî .get_edges_tibble","text":"tibble columns , edge, .","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-get_nodes_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Get nodes tibble from verb call. ‚Äî .get_nodes_tibble","title":"Get nodes tibble from verb call. ‚Äî .get_nodes_tibble","text":"Internal helper build nodes tibble verb call.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-get_nodes_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get nodes tibble from verb call. ‚Äî .get_nodes_tibble","text":"","code":".get_nodes_tibble(name, calls)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-get_nodes_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get nodes tibble from verb call. ‚Äî .get_nodes_tibble","text":"name Character vector node names. calls List calls ....","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-get_nodes_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get nodes tibble from verb call. ‚Äî .get_nodes_tibble","text":"tibble column name node names.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-getter_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Output object of getter queries ‚Äî .getter_output","title":"Output object of getter queries ‚Äî .getter_output","text":"Helper format output getter queries.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-getter_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output object of getter queries ‚Äî .getter_output","text":"","code":".getter_output(cg, idx0, nodes)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-getter_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output object of getter queries ‚Äî .getter_output","text":"cg caugi_graph object. idx0 vector zero-based node indices. nodes vector node names.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-getter_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output object of getter queries ‚Äî .getter_output","text":"list character vectors, set node names. one node requested, returns character vector.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-glyph_map_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get edge operators ‚Äî .glyph_map_get","title":"Get edge operators ‚Äî .glyph_map_get","text":"function gets default caugi edge glyphs","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-glyph_map_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get edge operators ‚Äî .glyph_map_get","text":"","code":".glyph_map_get()"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-glyph_map_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get edge operators ‚Äî .glyph_map_get","text":"current edge glyphs caugi environment","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-glyph_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Get glyph for an operator ‚Äî .glyph_of","title":"Get glyph for an operator ‚Äî .glyph_of","text":"Get glyph string given edge operator symbol.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-glyph_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get glyph for an operator ‚Äî .glyph_of","text":"","code":".glyph_of(op_sym)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-glyph_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get glyph for an operator ‚Äî .glyph_of","text":"op_sym symbol representing edge operator (e.g., %-->%).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-glyph_of.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get glyph for an operator ‚Äî .glyph_of","text":"string representing edge glyph (e.g., \"-->\").","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-is_edge_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Is it an edge call / expression? ‚Äî .is_edge_call","title":"Is it an edge call / expression? ‚Äî .is_edge_call","text":"function checks expression edge call","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-is_edge_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is it an edge call / expression? ‚Äî .is_edge_call","text":"","code":".is_edge_call(expr)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-is_edge_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is it an edge call / expression? ‚Äî .is_edge_call","text":"expr expression check","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-is_edge_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is it an edge call / expression? ‚Äî .is_edge_call","text":"TRUE expression edge call, FALSE otherwise","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-is_node_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Is it a node expr? ‚Äî .is_node_expr","title":"Is it a node expr? ‚Äî .is_node_expr","text":"Check expression valid node expression: symbol, string, number, c(...), +, (...)","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-is_node_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is it a node expr? ‚Äî .is_node_expr","text":"","code":".is_node_expr(expr)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-is_node_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is it a node expr? ‚Äî .is_node_expr","text":"expr expression check","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-is_node_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is it a node expr? ‚Äî .is_node_expr","text":"TRUE expression valid node expression, FALSE otherwise","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-mark_not_built.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark a caugi_graph as not built. ‚Äî .mark_not_built","title":"Mark a caugi_graph as not built. ‚Äî .mark_not_built","text":"caugi_graph modified, marked built. function sets built attribute FALSE. Thereby, Rust backend R frontend match, one point, caugi_graph need rebuild queried.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-mark_not_built.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark a caugi_graph as not built. ‚Äî .mark_not_built","text":"","code":".mark_not_built(cg)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-mark_not_built.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark a caugi_graph as not built. ‚Äî .mark_not_built","text":"cg caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-mark_not_built.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark a caugi_graph as not built. ‚Äî .mark_not_built","text":"caugi_graph object, built attribute set FALSE.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-parse_edge_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse one caugi_graph(...) argument ‚Äî .parse_edge_arg","title":"Parse one caugi_graph(...) argument ‚Äî .parse_edge_arg","text":"Parse one caugi_graph(...) argument edge units","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-parse_edge_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse one caugi_graph(...) argument ‚Äî .parse_edge_arg","text":"","code":".parse_edge_arg(expr)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-parse_edge_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse one caugi_graph(...) argument ‚Äî .parse_edge_arg","text":"expr expression representing edge nodes","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-parse_edge_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse one caugi_graph(...) argument ‚Äî .parse_edge_arg","text":"list edge units, lhs, rhs, glyph.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-register_edge.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a new edge operator ‚Äî .register_edge","title":"Register a new edge operator ‚Äî .register_edge","text":"Register new edge operator use caugi_graph().","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-register_edge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a new edge operator ‚Äî .register_edge","text":"","code":".register_edge(glyph)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-register_edge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a new edge operator ‚Äî .register_edge","text":"glyph string representing edge glyph (e.g., \"-->\", \"<->\").","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-register_edge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a new edge operator ‚Äî .register_edge","text":"operator name (e.g., \"%-->%\"), invisibly.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-resolve_idx0_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve node name or index to 0-based index. ‚Äî .resolve_idx0_get","title":"Resolve node name or index to 0-based index. ‚Äî .resolve_idx0_get","text":"Internal helper function resolve either node name node index 0-based index. .resolve_idx0_get uses get fastmap expects single value, .resolve_idx0_mget uses mget can return multiple values.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-resolve_idx0_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve node name or index to 0-based index. ‚Äî .resolve_idx0_get","text":"","code":".resolve_idx0_get(nm_idx_map, node_name = NULL, node_index = NULL)  .resolve_idx0_mget(nm_idx_map, node_name = NULL, node_index = NULL)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-resolve_idx0_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve node name or index to 0-based index. ‚Äî .resolve_idx0_get","text":"nm_idx_map fastmap mapping node names 0-based indices caugi_graph. node_name Optional character vector node names. node_index Optional numeric vector 1-based node indices.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-segment_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an edge unit from lhs, op, rhs ‚Äî .segment_units","title":"Create an edge unit from lhs, op, rhs ‚Äî .segment_units","text":"Create edge unit lhs, op, rhs expressions.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-segment_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an edge unit from lhs, op, rhs ‚Äî .segment_units","text":"","code":".segment_units(lhs_term, op_chr, rhs_term)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-segment_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an edge unit from lhs, op, rhs ‚Äî .segment_units","text":"lhs_term expression left-hand side nodes. op_chr string representing edge operator glyph. rhs_term expression right-hand side nodes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-segment_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an edge unit from lhs, op, rhs ‚Äî .segment_units","text":"list elements lhs, rhs, glyph.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-split_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand target expressions with = ‚Äî .split_plus","title":"Expand target expressions with = ‚Äî .split_plus","text":"Split expression top-level '+' terms (fully flattened).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-split_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand target expressions with = ‚Äî .split_plus","text":"","code":".split_plus(expr)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-split_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand target expressions with = ‚Äî .split_plus","text":"expr expression representing nodes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-split_plus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand target expressions with = ‚Äî .split_plus","text":"character vector node names.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-update_caugi_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Update nodes and edges of a caugi_graph ‚Äî .update_caugi_graph","title":"Update nodes and edges of a caugi_graph ‚Äî .update_caugi_graph","text":"Internal helper add remove nodes/edges mark graph built.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-update_caugi_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update nodes and edges of a caugi_graph ‚Äî .update_caugi_graph","text":"","code":".update_caugi_graph(   cg,   nodes = NULL,   edges = NULL,   action = c(\"add\", \"remove\") )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-update_caugi_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update nodes and edges of a caugi_graph ‚Äî .update_caugi_graph","text":"cg caugi_graph object. nodes tibble column name node names add/remove. edges tibble columns , edge, edges add/remove. action One \"add\" \"remove\".","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-update_caugi_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update nodes and edges of a caugi_graph ‚Äî .update_caugi_graph","text":"updated caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-view_to_caugi_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a graph pointer to a caugi_graph S7 object ‚Äî .view_to_caugi_graph","title":"Convert a graph pointer to a caugi_graph S7 object ‚Äî .view_to_caugi_graph","text":"Convert graph pointer Rust caugi_graph S7 object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-view_to_caugi_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a graph pointer to a caugi_graph S7 object ‚Äî .view_to_caugi_graph","text":"","code":".view_to_caugi_graph(ptr, node_names = NULL)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-view_to_caugi_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a graph pointer to a caugi_graph S7 object ‚Äî .view_to_caugi_graph","text":"ptr pointer underlying Rust graph structure. node_names Optional character vector node names. NULL (default), nodes named V1, V2, ..., Vn.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/dot-view_to_caugi_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a graph pointer to a caugi_graph S7 object ‚Äî .view_to_caugi_graph","text":"caugi_graph object representing graph.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/edge_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the edge types of a caugi_graph. ‚Äî edge_types","title":"Get the edge types of a caugi_graph. ‚Äî edge_types","text":"Get edge types caugi_graph.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/edge_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the edge types of a caugi_graph. ‚Äî edge_types","text":"","code":"edge_types(cg)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/edge_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the edge types of a caugi_graph. ‚Äî edge_types","text":"cg caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/edge_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the edge types of a caugi_graph. ‚Äî edge_types","text":"character vector edge types.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/edge_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the edge types of a caugi_graph. ‚Äî edge_types","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %--o% C,   C %<->% D,   D %---% E,   A %o-o% E,   class = \"UNKNOWN\" ) edge_types(cg) # returns c(\"-->\", \"o-o\", \"--o\", \"<->\", \"---\") #> [1] \"-->\" \"o-o\" \"--o\" \"<->\" \"---\""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get edges of a caugi_graph. ‚Äî edges","title":"Get edges of a caugi_graph. ‚Äî edges","text":"Get edges caugi_graph.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get edges of a caugi_graph. ‚Äî edges","text":"","code":"edges(cg)  E(cg)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get edges of a caugi_graph. ‚Äî edges","text":"cg caugi_graph object.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get edges of a caugi_graph. ‚Äî edges","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %-->% C,   D,   class = \"DAG\" ) edges(cg) # returns the tibble with columns from, edge, to #> # A tibble: 2 √ó 3 #>   from  edge  to    #>   <chr> <chr> <chr> #> 1 A     -->   B     #> 2 B     -->   C"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/exogenous.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all exogenous nodes in a caugi_graph ‚Äî exogenous","title":"Get all exogenous nodes in a caugi_graph ‚Äî exogenous","text":"Get exogenous nodes (nodes parents) caugi_graph.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/exogenous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all exogenous nodes in a caugi_graph ‚Äî exogenous","text":"","code":"exogenous(cg, undirected_as_parents = FALSE)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/exogenous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all exogenous nodes in a caugi_graph ‚Äî exogenous","text":"cg caugi_graph object. undirected_as_parents Logical; TRUE, undirected edges treated (possible) parents, FALSE (default), undirected edges ignored.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/exogenous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all exogenous nodes in a caugi_graph ‚Äî exogenous","text":"Either character vector node names (single node requested) list character vectors (multiple nodes requested).","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/exogenous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all exogenous nodes in a caugi_graph ‚Äî exogenous","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %-->% C,   class = \"DAG\" ) exogenous(cg) # \"A\" #> [1] \"A\""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/freeze_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: Freeze the state environment of a caugi_graph ‚Äî freeze_state","title":"Internal: Freeze the state environment of a caugi_graph ‚Äî freeze_state","text":"Internal functions freeze unfreezethe state environment caugi_graph, preventing modifications. functions intended used directly users.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/freeze_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: Freeze the state environment of a caugi_graph ‚Äî freeze_state","text":"","code":".freeze_state(e)  .unfreeze_state(e)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/freeze_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal: Freeze the state environment of a caugi_graph ‚Äî freeze_state","text":"e state environment freeze/unfreeze.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/freeze_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal: Freeze the state environment of a caugi_graph ‚Äî freeze_state","text":"frozen/unfrozen environment.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/generate_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a caugi_graph using Erd≈ës-R√©nyi. ‚Äî generate_graph","title":"Generate a caugi_graph using Erd≈ës-R√©nyi. ‚Äî generate_graph","text":"Sample random DAG CPDAG using Erd≈ës-R√©nyi random graph generation.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/generate_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a caugi_graph using Erd≈ës-R√©nyi. ‚Äî generate_graph","text":"","code":"generate_graph(n, m = NULL, p = NULL, class = c(\"DAG\", \"CPDAG\"))"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/generate_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a caugi_graph using Erd≈ës-R√©nyi. ‚Äî generate_graph","text":"n Integer >= 0. Number nodes graph. m Integer 0, n*(n-1)/2. Number edges graph. Exactly one m p must supplied. p Numeric [0,1]. Probability edge creation. Exactly one m p must supplied. class \"DAG\" \"CPDAG\".","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/generate_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a caugi_graph using Erd≈ës-R√©nyi. ‚Äî generate_graph","text":"sampled caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/generate_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a caugi_graph using Erd≈ës-R√©nyi. ‚Äî generate_graph","text":"","code":"# generate a random DAG with 5 nodes and 4 edges dag <- generate_graph(n = 5, m = 4, class = \"DAG\")  # generate a random CPDAG with 5 nodes and edge probability 0.3 cpdag <- generate_graph(n = 5, p = 0.3, class = \"CPDAG\")"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/grapes-greater-than-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Infix operators for edge specifications ‚Äî %-->%","title":"Infix operators for edge specifications ‚Äî %-->%","text":"operators used specify edges caugi_graph(). used internally caugi_graph() calls.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/grapes-greater-than-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infix operators for edge specifications ‚Äî %-->%","text":"","code":"lhs %-->% rhs"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/grapes-greater-than-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infix operators for edge specifications ‚Äî %-->%","text":"lhs left-hand side node expression. rhs right-hand side node expression.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/grapes-greater-than-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infix operators for edge specifications ‚Äî %-->%","text":"tibble columns , , edge.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/hd.html","id":null,"dir":"Reference","previous_headings":"","what":"Hamming Distance ‚Äî hd","title":"Hamming Distance ‚Äî hd","text":"Compute Hamming Distance two graphs.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/hd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hamming Distance ‚Äî hd","text":"","code":"hd(cg1, cg2, normalized = FALSE)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/hd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hamming Distance ‚Äî hd","text":"cg1 caugi_graph object. cg2 caugi_graph object. normalized Logical; TRUE, returns normalized Hamming Distance.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/hd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hamming Distance ‚Äî hd","text":"integer representing Hamming Distance two graphs.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_acyclic.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the caugi acyclic? ‚Äî is_acyclic","title":"Is the caugi acyclic? ‚Äî is_acyclic","text":"Checks given caugi graph acyclic.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_acyclic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the caugi acyclic? ‚Äî is_acyclic","text":"","code":"is_acyclic(cg, force_check = FALSE)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_acyclic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the caugi acyclic? ‚Äî is_acyclic","text":"cg caugi_graph object. force_check Logical; TRUE, function test graph acyclic, FALSE (default), look graph class match , possible.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_acyclic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the caugi acyclic? ‚Äî is_acyclic","text":"logical value indicating whether graph acyclic.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_acyclic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is the caugi acyclic? ‚Äî is_acyclic","text":"Logically, possible graph class \"DAG\" \"PDAG\" cycles, case user modified graph creation unforeseen way introduced cycles, function allows force check acyclicity, needed.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_acyclic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is the caugi acyclic? ‚Äî is_acyclic","text":"","code":"cg_acyclic <- caugi_graph(   A %-->% B,   B %-->% C,   class = \"DAG\" ) is_acyclic(cg_acyclic) # TRUE #> [1] TRUE cg_cyclic <- caugi_graph(   A %-->% B,   B %-->% C,   C %-->% A,   class = \"UNKNOWN\" ) is_acyclic(cg_cyclic) # FALSE #> [1] FALSE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_caugi.html","id":null,"dir":"Reference","previous_headings":"","what":"Is it a caugi graph? ‚Äî is_caugi","title":"Is it a caugi graph? ‚Äî is_caugi","text":"Checks given object caugi_graph. Mostly used internally validate inputs.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_caugi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is it a caugi graph? ‚Äî is_caugi","text":"","code":"is_caugi(x, throw_error = FALSE)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_caugi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is it a caugi graph? ‚Äî is_caugi","text":"x object check. throw_error Logical; TRUE, throws error x caugi_graph.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_caugi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is it a caugi graph? ‚Äî is_caugi","text":"logical value indicating whether object caugi_graph.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_caugi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is it a caugi graph? ‚Äî is_caugi","text":"","code":"cg <- caugi_graph(   A %-->% B,   class = \"DAG\" )  is_caugi(cg) # TRUE #> [1] TRUE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_cpdag.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the caugi graph a CPDAG? ‚Äî is_cpdag","title":"Is the caugi graph a CPDAG? ‚Äî is_cpdag","text":"Checks given caugi graph Complete Partially Directed Acyclic Graph (CPDAG).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_cpdag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the caugi graph a CPDAG? ‚Äî is_cpdag","text":"","code":"is_cpdag(cg)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_cpdag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the caugi graph a CPDAG? ‚Äî is_cpdag","text":"cg caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_cpdag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the caugi graph a CPDAG? ‚Äî is_cpdag","text":"logical value indicating whether graph CPDAG.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_cpdag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is the caugi graph a CPDAG? ‚Äî is_cpdag","text":"","code":"cg_cpdag <- caugi_graph(   A %---% B,   A %-->% C,   B %-->% C,   class = \"PDAG\" ) is_cpdag(cg_cpdag) # TRUE #> [1] TRUE  cg_not_cpdag <- caugi_graph(   A %---% B,   A %---% C,   B %-->% C,   class = \"PDAG\" ) is_cpdag(cg_not_cpdag) # FALSE #> [1] FALSE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_dag.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the caugi graph a DAG? ‚Äî is_dag","title":"Is the caugi graph a DAG? ‚Äî is_dag","text":"Checks given caugi graph Directed Acyclic Graph (DAG).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_dag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the caugi graph a DAG? ‚Äî is_dag","text":"","code":"is_dag(cg, force_check = FALSE)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_dag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the caugi graph a DAG? ‚Äî is_dag","text":"cg caugi_graph object. force_check Logical; TRUE, function test graph DAG, FALSE (default), look graph class match , possible.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_dag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the caugi graph a DAG? ‚Äî is_dag","text":"logical value indicating whether graph DAG.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_dag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is the caugi graph a DAG? ‚Äî is_dag","text":"","code":"cg_dag_class <- caugi_graph(   A %-->% B,   class = \"DAG\" ) is_dag(cg_dag_class) # TRUE #> [1] TRUE cg_dag_but_pdag_class <- caugi_graph(   A %-->% B,   class = \"PDAG\" ) is_dag(cg_dag_but_pdag_class) # TRUE #> [1] TRUE cg_cyclic <- caugi_graph(   A %-->% B,   B %-->% C,   C %-->% A,   class = \"UNKNOWN\",   simple = FALSE ) is_dag(cg_cyclic) # FALSE #> [1] FALSE  cg_undirected <- caugi_graph(   A %---% B,   class = \"UNKNOWN\" ) is_dag(cg_undirected) # FALSE #> [1] FALSE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_edge_symmetric.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the edge symmetric? ‚Äî is_edge_symmetric","title":"Is the edge symmetric? ‚Äî is_edge_symmetric","text":"Check given edge glyph symmetric edge registry.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_edge_symmetric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the edge symmetric? ‚Äî is_edge_symmetric","text":"","code":"is_edge_symmetric(glyph)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_edge_symmetric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the edge symmetric? ‚Äî is_edge_symmetric","text":"glyph string representing edge glyph (e.g., \"-->\", \"<->\").","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_edge_symmetric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the edge symmetric? ‚Äî is_edge_symmetric","text":"Logical, TRUE edge symmetric, otherwise throws error.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_empty_caugi.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the caugi graph empty? ‚Äî is_empty_caugi","title":"Is the caugi graph empty? ‚Äî is_empty_caugi","text":"Checks given caugi graph empty (nodes).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_empty_caugi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the caugi graph empty? ‚Äî is_empty_caugi","text":"","code":"is_empty_caugi(cg)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_empty_caugi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the caugi graph empty? ‚Äî is_empty_caugi","text":"cg caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_empty_caugi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the caugi graph empty? ‚Äî is_empty_caugi","text":"logical value indicating whether graph empty.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_empty_caugi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is the caugi graph empty? ‚Äî is_empty_caugi","text":"","code":"cg_empty <- caugi_graph(class = \"DAG\") is_empty_caugi(cg_empty) # TRUE #> [1] TRUE cg_non_empty <- caugi_graph(   A %-->% B,   class = \"DAG\" ) is_empty_caugi(cg_non_empty) # FALSE #> [1] FALSE  cg_no_edges_but_has_nodes <- caugi_graph(   A, B,   class = \"DAG\" ) is_empty_caugi(cg_no_edges_but_has_nodes) # FALSE #> [1] FALSE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_pdag.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the caugi graph a PDAG? ‚Äî is_pdag","title":"Is the caugi graph a PDAG? ‚Äî is_pdag","text":"Checks given caugi graph Partially Directed Acyclic Graph (PDAG).","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_pdag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the caugi graph a PDAG? ‚Äî is_pdag","text":"","code":"is_pdag(cg, force_check = FALSE)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_pdag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the caugi graph a PDAG? ‚Äî is_pdag","text":"cg caugi_graph object. force_check Logical; TRUE, function test graph PDAG, FALSE (default), look graph class match , possible.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_pdag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the caugi graph a PDAG? ‚Äî is_pdag","text":"logical value indicating whether graph PDAG.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_pdag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is the caugi graph a PDAG? ‚Äî is_pdag","text":"","code":"cg_dag_class <- caugi_graph(   A %-->% B,   class = \"DAG\" ) is_pdag(cg_dag_class) # TRUE #> [1] TRUE cg_dag_but_pdag_class <- caugi_graph(   A %-->% B,   class = \"PDAG\" ) is_pdag(cg_dag_but_pdag_class) # TRUE #> [1] TRUE cg_cyclic <- caugi_graph(   A %-->% B,   B %-->% C,   C %-->% A,   D %---% A,   class = \"UNKNOWN\",   simple = FALSE ) is_pdag(cg_cyclic) # FALSE #> [1] FALSE  cg_undirected <- caugi_graph(   A %---% B,   class = \"UNKNOWN\" ) is_pdag(cg_undirected) # TRUE #> [1] TRUE  cg_pag <- caugi_graph(   A %o->% B,   class = \"UNKNOWN\" ) is_pdag(cg_pag) # FALSE #> [1] FALSE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_valid_backdoor.html","id":null,"dir":"Reference","previous_headings":"","what":"Is a backdoor set valid? ‚Äî is_valid_backdoor","title":"Is a backdoor set valid? ‚Äî is_valid_backdoor","text":"Checks whether Z valid backdoor adjustment set X --> Y.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_valid_backdoor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is a backdoor set valid? ‚Äî is_valid_backdoor","text":"","code":"is_valid_backdoor(   cg,   X = NULL,   Y = NULL,   Z = NULL,   X_index = NULL,   Y_index = NULL,   Z_index = NULL )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_valid_backdoor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is a backdoor set valid? ‚Äî is_valid_backdoor","text":"cg caugi_graph object. X, Y Single node names. Z Optional node set conditioning X_index, Y_index, Z_index Optional 1-based indices.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_valid_backdoor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is a backdoor set valid? ‚Äî is_valid_backdoor","text":"Logical value indicating backdoor valid .","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/is_valid_backdoor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is a backdoor set valid? ‚Äî is_valid_backdoor","text":"","code":"cg <- caugi_graph(   C %-->% X,   X %-->% F,   X %-->% D,   A %-->% X,   A %-->% K,   K %-->% Y,   D %-->% Y,   D %-->% G,   Y %-->% H,   class = \"DAG\" )  is_valid_backdoor(cg, X = \"X\", Y = \"Y\", Z = NULL) # FALSE #> [1] FALSE is_valid_backdoor(cg, X = \"X\", Y = \"Y\", Z = \"K\") # TRUE #> [1] TRUE is_valid_backdoor(cg, X = \"X\", Y = \"Y\", Z = c(\"A\", \"C\")) # TRUE #> [1] TRUE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/length.html","id":null,"dir":"Reference","previous_headings":"","what":"Length of a caugi_graph ‚Äî length","title":"Length of a caugi_graph ‚Äî length","text":"Returns number nodes graph.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Length of a caugi_graph ‚Äî length","text":"x caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Length of a caugi_graph ‚Äî length","text":"integer representing number nodes.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Length of a caugi_graph ‚Äî length","text":"","code":"cg <- caugi_graph(   A %-->% B,   class = \"DAG\" ) length(cg) # 2 #> [1] 2  cg2 <- caugi_graph(   A %-->% B + C,   nodes = LETTERS[1:5],   class = \"DAG\" ) length(cg2) # 5 #> [1] 5"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/markov_blanket.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Markov blanket of nodes in a caugi_graph ‚Äî markov_blanket","title":"Get Markov blanket of nodes in a caugi_graph ‚Äî markov_blanket","text":"Get Markov blanket nodes caugi_graph","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/markov_blanket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Markov blanket of nodes in a caugi_graph ‚Äî markov_blanket","text":"","code":"markov_blanket(cg, nodes = NULL, index = NULL)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/markov_blanket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Markov blanket of nodes in a caugi_graph ‚Äî markov_blanket","text":"cg caugi_graph object. nodes vector node names, vector unquoted node names, expression combining + c(). index vector node indexes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/markov_blanket.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Markov blanket of nodes in a caugi_graph ‚Äî markov_blanket","text":"Either character vector node names (single node requested) list character vectors (multiple nodes requested).","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/markov_blanket.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Markov blanket of nodes in a caugi_graph ‚Äî markov_blanket","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %-->% C,   class = \"DAG\" ) markov_blanket(cg, \"A\") # \"B\" #> [1] \"B\" markov_blanket(cg, index = 2) # \"A\" \"C\" #> [1] \"A\" \"C\" markov_blanket(cg, \"B\") # \"A\" \"C\" #> [1] \"A\" \"C\" markov_blanket(cg, c(\"B\", \"C\")) #> $B #> [1] \"A\" \"C\" #>  #> $C #> [1] \"B\" #>  #> $B #> [1] \"A\" \"C\" #> #> $C #> [1] \"B\""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/neighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get neighbors of nodes in a caugi_graph ‚Äî neighbors","title":"Get neighbors of nodes in a caugi_graph ‚Äî neighbors","text":"Get neighbors nodes caugi_graph","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/neighbors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get neighbors of nodes in a caugi_graph ‚Äî neighbors","text":"","code":"neighbors(cg, nodes = NULL, index = NULL)  neighbours(cg, nodes = NULL, index = NULL)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/neighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get neighbors of nodes in a caugi_graph ‚Äî neighbors","text":"cg caugi_graph object. nodes vector node names, vector unquoted node names, expression combining + c(). index vector node indexes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/neighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get neighbors of nodes in a caugi_graph ‚Äî neighbors","text":"Either character vector node names (single node requested) list character vectors (multiple nodes requested).","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/neighbors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get neighbors of nodes in a caugi_graph ‚Äî neighbors","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %-->% C,   class = \"DAG\" ) neighbors(cg, \"A\") # \"B\" #> [1] \"B\" neighbors(cg, index = 2) # \"A\" \"C\" #> [1] \"A\" \"C\" neighbors(cg, \"B\") # \"A\" \"C\" #> [1] \"A\" \"C\" neighbors(cg, c(\"B\", \"C\")) #> $B #> [1] \"A\" \"C\" #>  #> $C #> [1] \"B\" #>  #> $B #> [1] \"A\" \"C\" #> #> $C #> [1] \"B\""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get nodes or edges of a caugi_graph ‚Äî nodes","title":"Get nodes or edges of a caugi_graph ‚Äî nodes","text":"Get nodes edges caugi_graph","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get nodes or edges of a caugi_graph ‚Äî nodes","text":"","code":"nodes(cg)  vertices(cg)  V(cg)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get nodes or edges of a caugi_graph ‚Äî nodes","text":"cg caugi_graph object.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get nodes or edges of a caugi_graph ‚Äî nodes","text":"tibble name column.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get nodes or edges of a caugi_graph ‚Äî nodes","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %-->% C,   D,   class = \"DAG\" ) nodes(cg) # returns the tibble with nodes A, B, C, D #> # A tibble: 4 √ó 1 #>   name  #>   <chr> #> 1 A     #> 2 B     #> 3 C     #> 4 D"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/parents.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parents of nodes in a caugi_graph ‚Äî parents","title":"Get parents of nodes in a caugi_graph ‚Äî parents","text":"Get parents node graph. Note nodes index can given.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/parents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parents of nodes in a caugi_graph ‚Äî parents","text":"","code":"parents(cg, nodes = NULL, index = NULL)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/parents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parents of nodes in a caugi_graph ‚Äî parents","text":"cg caugi_graph object. nodes vector node names, vector unquoted node names, expression combining + c(). index vector node indexes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/parents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parents of nodes in a caugi_graph ‚Äî parents","text":"Either character vector node names (single node requested) list character vectors (multiple nodes requested).","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/parents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parents of nodes in a caugi_graph ‚Äî parents","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %-->% C,   class = \"DAG\" ) parents(cg, \"A\") # NULL #> NULL parents(cg, index = 2) # \"A\" #> [1] \"A\" parents(cg, \"B\") # \"A\" #> [1] \"A\" parents(cg, c(\"B\", \"C\")) #> $B #> [1] \"A\" #>  #> $C #> [1] \"B\" #>  #> $B #> [1] \"A\" #> #> $C #> [1] \"B\""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a caugi_graph ‚Äî print","title":"Print a caugi_graph ‚Äî print","text":"Print caugi_graph","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a caugi_graph ‚Äî print","text":"x caugi_graph object. ... used.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a caugi_graph ‚Äî print","text":"input caugi_graph object, invisibly.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/print.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a caugi_graph ‚Äî print","text":"","code":"cg <- caugi_graph(   A %-->% B + C,   nodes = LETTERS[1:5],   class = \"DAG\" ) print(cg) #> # A tibble: 5 √ó 1 #>   name  #>   <chr> #> 1 A     #> 2 B     #> 3 C     #> 4 D     #> 5 E     #> # A tibble: 2 √ó 3 #>   from  edge  to    #>   <chr> <chr> <chr> #> 1 A     -->   B     #> 2 A     -->   C"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/register_caugi_edge.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a new edge type in the global registry. ‚Äî register_caugi_edge","title":"Register a new edge type in the global registry. ‚Äî register_caugi_edge","text":"Register new edge type global registry.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/register_caugi_edge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a new edge type in the global registry. ‚Äî register_caugi_edge","text":"","code":"register_caugi_edge(   glyph,   tail_mark,   head_mark,   class,   symmetric = FALSE,   flags = NULL )"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/register_caugi_edge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a new edge type in the global registry. ‚Äî register_caugi_edge","text":"glyph string representing edge glyph (e.g., \"-->\", \"<->\"). tail_mark One \"arrow\", \"tail\", \"circle\", \"\". head_mark One \"arrow\", \"tail\", \"circle\", \"\". class One \"directed\",\"undirected\",\"bidirected\",\"partial\". symmetric Logical. flags character vector flags. Currently supported: \"TRAVERSABLE_WHEN_CONDITIONED\" \"LATENT_CONFOUNDING\"","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/register_caugi_edge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a new edge type in the global registry. ‚Äî register_caugi_edge","text":"TRUE, invisibly.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/register_caugi_edge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a new edge type in the global registry. ‚Äî register_caugi_edge","text":"","code":"# first, for reproducability, we reset the registry to default reset_caugi_registry()  # create a new registry reg <- caugi_registry()  # register an edge register_caugi_edge(   glyph = \"<--\",   tail_mark = \"arrow\",   head_mark = \"tail\",   class = \"directed\",   symmetric = FALSE )  # now, this edge is available for caugi graphs: cg <- caugi_graph(A %-->% B, B %<--% C, class = \"DAG\")  # reset the registry to default reset_caugi_registry()"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/registry.html","id":null,"dir":"Reference","previous_headings":"","what":"caugi edge registry ‚Äî registry","title":"caugi edge registry ‚Äî registry","text":"caugi edge registry stores information different edge types can used caugi graphs. maps edge glyphs (e.g., \"-->\", \"<->\", \"o->\", etc.) specifications, including tail head marks, class, symmetry. registry allows dynamic registration new edge types, enabling users extend set supported edges caugi. implemented singleton, ensuring single global instance registry throughout R session.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/registry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"caugi edge registry ‚Äî registry","text":"","code":"caugi_registry()  reset_caugi_registry()  seal_caugi_registry()"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/registry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"caugi edge registry ‚Äî registry","text":"edge_registry external pointer.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/registry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"caugi edge registry ‚Äî registry","text":"intented use caugi registry mostly advanced users developers. registry enables users need define custom edge types caugi directly. . currently mostly supports representation new edges, users might want represent reverse edges, preserves correctness reason edges.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/registry.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"caugi edge registry ‚Äî registry","text":"caugi_registry(): Access global edge registry, creating needed. reset_caugi_registry(): Reset global edge registry default state. seal_caugi_registry(): Seal global edge registry prevent modifications.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/registry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"caugi edge registry ‚Äî registry","text":"","code":"# first, for reproducability, we reset the registry to default reset_caugi_registry()  # create a new registry reg <- caugi_registry()  # register an edge register_caugi_edge(   glyph = \"<--\",   tail_mark = \"arrow\",   head_mark = \"tail\",   class = \"directed\",   symmetric = FALSE )  # now, this edge is available for caugi graphs: cg <- caugi_graph(A %-->% B, B %<--% C, class = \"DAG\")  # reset the registry to default reset_caugi_registry()"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/same_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Same nodes? ‚Äî same_nodes","title":"Same nodes? ‚Äî same_nodes","text":"Check two caugi_graph objects nodes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/same_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Same nodes? ‚Äî same_nodes","text":"","code":"same_nodes(cg1, cg2, throw_error = FALSE)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/same_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Same nodes? ‚Äî same_nodes","text":"cg1 caugi_graph object. cg2 caugi_graph object. throw_error Logical; TRUE, throws error graphs nodes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/same_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Same nodes? ‚Äî same_nodes","text":"logical indicating two graphs nodes.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/same_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Same nodes? ‚Äî same_nodes","text":"","code":"cg1 <- caugi_graph(   A %-->% B,   class = \"DAG\" ) cg2 <- caugi_graph(   A %-->% B + C,   class = \"DAG\" ) same_nodes(cg1, cg2) # FALSE #> [1] FALSE"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/shd.html","id":null,"dir":"Reference","previous_headings":"","what":"Structural Hamming Distance ‚Äî shd","title":"Structural Hamming Distance ‚Äî shd","text":"Compute Structural Hamming Distance (SHD) two graphs.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/shd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Structural Hamming Distance ‚Äî shd","text":"","code":"shd(cg1, cg2, normalized = FALSE)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/shd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Structural Hamming Distance ‚Äî shd","text":"cg1 caugi_graph object. cg2 caugi_graph object. normalized Logical; TRUE, returns normalized SHD.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/shd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Structural Hamming Distance ‚Äî shd","text":"integer representing SHD two graphs.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/subgraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the induced subgraph ‚Äî subgraph","title":"Get the induced subgraph ‚Äî subgraph","text":"Get induced subgraph","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/subgraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the induced subgraph ‚Äî subgraph","text":"","code":"subgraph(cg, nodes = NULL, index = NULL)"},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/subgraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the induced subgraph ‚Äî subgraph","text":"cg caugi_graph object. nodes vector node names, vector unquoted node names, expression combining + c(). index vector node indexes.","code":""},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/subgraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the induced subgraph ‚Äî subgraph","text":"new caugi_graph subgraph selected nodes.","code":""},{"path":[]},{"path":"https://frederikfabriciusbjerre.github.io/caugi/reference/subgraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the induced subgraph ‚Äî subgraph","text":"","code":"cg <- caugi_graph(   A %-->% B,   B %-->% C,   class = \"DAG\" ) sub_cg <- subgraph(cg, c(\"B\", \"C\")) cg2 <- caugi_graph(B %-->% C, class = \"DAG\") all(nodes(sub_cg) == nodes(cg2)) # TRUE #> [1] TRUE all(edges(sub_cg) == edges(cg2)) # TRUE #> [1] TRUE"}]
